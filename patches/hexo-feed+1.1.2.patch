diff --git a/node_modules/hexo-feed/lib/generators/base.js b/node_modules/hexo-feed/lib/generators/base.js
index 9d62b39..9863323 100644
--- a/node_modules/hexo-feed/lib/generators/base.js
+++ b/node_modules/hexo-feed/lib/generators/base.js
@@ -7,7 +7,8 @@ const generateFeed = (render, type, posts, tags, categories, config, renderOptio
 
     const publishedPosts = posts
         .filter((post) => post.draft !== true)
-        .filter((post) => post.published === undefined || post.published === true);
+        .filter((post) => post.published === undefined || post.published === true)
+        .filter(post => !post.categories.some(category => category.name === 'Library')); // This line added by GoF to *exclude* a category I used for posts that weren't written by me.
 
     const lastPublishedPost = publishedPosts.sort('-date').first();
     const lastPublishedPostDate = lastPublishedPost ? lastPublishedPost.date : helpers.moment();
@@ -18,6 +19,31 @@ const generateFeed = (render, type, posts, tags, categories, config, renderOptio
         postsToRender = postsToRender.limit(limit);
     }
 
+    postsToRender.forEach(post => {
+      // This section will extract the first image found in the post and add it as an <enclosure> tag to the RSS item. - GoF
+      const content = post.content || '';
+
+      // Extract first image
+      const imgMatch = content.match(/<img[^>]+src=["']([^"']+)["'][^>]*>/i);
+      const imageURL = imgMatch ? imgMatch[1] : null;
+
+      if (imageURL) {
+        const imageType = imageURL.endsWith('.png') ? 'image/png' : 'image/jpeg';
+        post.enclosure = {
+          url: config.url + imageURL,
+          type: imageType
+        };
+      }
+
+      // This is a filter to remove stray HTML tags that made their way into the post content. - GoF
+      const blockedTags = ['script', 'link'];
+      const tagPattern = new RegExp(
+        `<(?:${blockedTags.join('|')})\\b[^>]*>(?:[^]*?<\\/\\s*(?:${blockedTags.join('|')})\\s*>|)`,
+        'gi'
+      );
+      post.content = post.content.replace(tagPattern, '');
+    });
+
     return render
         .render(renderOptions, {
             ...helpers,
diff --git a/node_modules/hexo-feed/lib/templates/rss.ejs b/node_modules/hexo-feed/lib/templates/rss.ejs
index 97d697f..7ac6b43 100644
--- a/node_modules/hexo-feed/lib/templates/rss.ejs
+++ b/node_modules/hexo-feed/lib/templates/rss.ejs
@@ -1,9 +1,14 @@
 <?xml version="1.0"?>
-<rss version="2.0">
+<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
     <channel>
         <title><%= config.title %><%= tag ? ` • Posts by "${tag}" tag` : '' %><%= category ? ` • Posts by "${category}" category` : '' %></title>
-        <link><%= config.url %></link>
+        <link><%- config.url %></link>
         <description><%= config.description %></description>
+        <image>
+            <url><%= config.url + config.logo %></url>
+            <title><%= config.title %></title>
+            <link><%- config.url %></link>
+        </image>
         <language><%= config.language %></language>
         <pubDate><%= moment(lastBuildDate).locale('en').format('ddd, DD MMM YYYY HH:mm:ss ZZ') %></pubDate>
         <lastBuildDate><%= moment(lastBuildDate).locale('en').format('ddd, DD MMM YYYY HH:mm:ss ZZ') %></lastBuildDate>
@@ -12,14 +17,19 @@
         <%_ } _%>
         <%_ for (const post of posts) { _%>
         <item>
-            <guid isPermalink="true"><%= post.permalink %></guid>
+            <guid isPermaLink="true"><%= post.permalink %></guid>
             <title><%= post.title %></title>
+            <description><%= post.description %></description>
+            <creator><%= post.author %></creator>
             <link><%= post.permalink %></link>
             <%_ for (const tag of (post.tags ? post.tags.toArray() : [])) { _%>
             <category><%= tag.name %></category>
             <%_ } _%>
             <pubDate><%= moment(post.date).locale('en').format('ddd, DD MMM YYYY HH:mm:ss ZZ') %></pubDate>
-            <description><![CDATA[ <%= post.content %> ]]></description>
+            <% if (post.enclosure) { %><enclosure url="<%= post.enclosure.url %>" length="0" type="<%= post.enclosure.type %>" /><% } %>
+            <content:encoded><![CDATA[ <%- post.content %> ]]></content:encoded>
+            <% console.log("EJS Render"); %>
+            <% console.log(post.author); %>
         </item>
         <%_ } _%>
     </channel>
